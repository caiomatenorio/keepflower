openapi: 3.1.0

info:
  title: KeepFlower API - Task, Routine, and Medication Management
  description: > 
    KeepFlower API provides a robust, scalable backend to support client applications
    (mobile and web) for seamless task management, personalized routines, reminders,
    and medication tracking. Designed with security, performance, and extensibility in mind,
    it empowers users to stay organized and maintain healthy habits effortlessly.
  version: 1.0.0

servers:
  - url: 'http'

paths:

components:
  schemas:
    SignUpRequest:
      type: object
      description: Request schema for user signup.
      properties: 
        name:
          type: string
          description: Name for the new user.
          minLength: 1
          maxLength: 100
          pattern: '^[?=.*\S].$' # At least one non-whitespace character
        email:
          type: string
          description: Email for the new user.
          format: email
        password:
          type: string
          description: Password for the new user.
          format: password
          minLength: 8
          maxLength: 128
          # Requires one lowercase, one uppercase, one digit, and accepts only the defined characters
          pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d''"!@#$%^&*()\-_=+\[\]{};:,.<>\/?\|`~\s]{8,128}$'
    
    SuccessResponse:
      type: object
      description: Success response schema.
      properties:
        message:
          type: string
          description: A success message indicating the operation was successful.

    SuccessResponseWithData:
      description: Success response schema containing data.
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type:
                - array
                - object
              description: Data returned from the operation, which can be an array or an object.

    ErrorResponse:
      type: object
      description: Error response schema.
      properties:
        message:
          type: string
          description: A message indicating the error that occurred.
        errorCode:
          type: string
          enum:
            - E000 # Unknown error
            - E001 # Validation error

    ErrorResponseWithFields:
      description: Error response schema containing field-specific errors.
      allOf:
        - $ref: "#/components/schemas/ErrorResponse"
        - type: object
          properties:
            fieldErrors:
              type: object
              description: Field-specific errors.
              additionalProperties:
                type:
                  - 'null'
                  - array
                description: Errors for this field. If null, no errors for this field.
                items:
                  type: string

  securitySchemes:
    cookieAuth:
      description: >
        Cookie-based authentication scheme. The client must include the `access_token`
        cookie with a valid JWT token in each request to access protected endpoints.
      type: apiKey
      in: cookie
      name: access_token

    refreshTokenAuth:
        description: >
            Refresh token authentication scheme. The client must include the `refresh_token`
            cookie with a valid refresh token to obtain a new access token and refresh token.
        type: apiKey
        in: cookie
        name: refresh_token